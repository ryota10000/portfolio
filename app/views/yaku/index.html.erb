<div class="relative min-h-screen">
  <div class="absolute top-0 left-0 w-full h-full bg-[url('/images/ma-zyan.png')] bg-center bg-no-repeat"
       style="background-size: 100% 100%; opacity: 0.2;">
  </div>
  <div class="relative z-10">
<h1 class="text-center text-4xl font-bold mt-8">３人麻雀点数計算</h1>

<%= render 'layouts/header' %>

<!-- 親と子の選択肢を追加 -->
<div class="text-center text-2xl my-4">
  <label>
    <input type="radio" name="role" value="parent" checked> 親
  </label>
  <label class="ml-4">
    <input type="radio" name="role" value="child"> 子
  </label>
</div>

<!-- ツモとロンの選択肢を追加 -->
<div class="text-center text-2xl my-4">
  <label>
    <input type="radio" name="winType" value="tumo" checked> ツモ
  </label>
  <label class="ml-4">
    <input type="radio" name="winType" value="ron"> ロン
  </label>
</div>

<!-- 面前（鳴きなし）と鳴きありの選択肢を追加 -->
<div class="text-center text-2xl my-4">
  <label>
    <input type="radio" name="menzen" value="none" checked> 鳴きなし（門前）
  </label>
  <label class="ml-4">
    <input type="radio" name="menzen" value="naki"> 鳴きあり
  </label>
</div>

<!-- 点数表示のためのエリア -->
<div id="score_display" class="text-center text-2xl my-4">
  点数がここに表示されます
</div>

<!-- リセットボタン -->
<div class="text-2xl text-center my-4">
  <button id="reset_button" class="bg-red-500 text-white p-2 rounded" onclick="resetAll()">リセット</button>
</div>

<!-- ドラ枚数選択ボタンを追加 -->
<div id="dora-selection" class="text-center text-2xl my-4">
  <label>ドラ枚数:</label>
  <div class="inline-flex flex-wrap justify-center mt-2">
    <% (0..11).each do |dora_count| %>
      <button class="dora-button px-4 py-2 mx-1 text-red-500 border border-red-500 font-semibold rounded hover:bg-red-100" data-dora="<%= dora_count %>"><%= dora_count %></button>
    <% end %>
    <button class="dora-button px-2 py-1 text-red-500 border border-red-500 font-semibold rounded hover:bg-red-100 mx-1 px-4 py-2" data-dora="12">12以上</button>
  </div>
</div>

<div class="flex justify-center space-x-20">

  <div class="text-2xl text-center my-4">
    <h2 class="text-2xl text-center my-4">1翻</h2> <!-- 1翻の見出し -->
    <!-- 1翻の役 -->
    <div class="text-2xl text-center my-4">
      <% ["立直", "一発", "門前清自模和", "平和", "断么九"].each do |yaku| %>
        <% if @yaku_values[yaku] %>
          <button class="yaku-button cursor-pointer px-2 py-1 text-indigo-500 border border-indigo-500 font-semibold rounded hover:bg-indigo-100 peer-checked:bg-indigo-300 peer-checked:text-white" data-han="<%= @yaku_values[yaku][:han] %>" data-fu="<%= @yaku_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>

    <div class="text-2xl text-center my-4">
      <% ["一盃口", "白", "發", "中", "自風牌", "場風牌"].each do |yaku| %>
        <% if @yaku_values[yaku] %>
          <button class="yaku-button px-2 py-1 text-indigo-500 border border-indigo-500 font-semibold rounded hover:bg-indigo-100" data-han="<%= @yaku_values[yaku][:han] %>" data-fu="<%= @yaku_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>

    <div class="text-2xl text-center my-4">
      <% ["槍槓", "嶺上開花", "海底撈月", "河底撈魚"].each do |yaku| %>
        <% if @yaku_values[yaku] %>
          <button class="yaku-button px-2 py-1 text-indigo-500 border border-indigo-500 font-semibold rounded hover:bg-indigo-100" data-han="<%= @yaku_values[yaku][:han] %>" data-fu="<%= @yaku_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>
  </div>

  <div class="text-2xl text-center my-4">
    <h2 class="text-2xl text-center my-4">2翻</h2> <!-- 2翻の見出し -->

    <!-- 2翻の役 -->
    <div class="text-2xl text-center my-4">
      <% ["ダブル立直", "七対子", "三色同順", "一気通貫"].each do |yaku| %>
        <% if @yaku_values[yaku] %>
          <button class="yaku-button px-2 py-1 text-indigo-500 border border-indigo-500 font-semibold rounded hover:bg-indigo-100" data-han="<%= @yaku_values[yaku][:han] %>" data-fu="<%= @yaku_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>

    <div class="text-2xl text-center my-4">
      <% ["混全帯幺九", "対々和", "三暗刻", "三色同刻"].each do |yaku| %>
        <% if @yaku_values[yaku] %>
          <button class="yaku-button px-2 py-1 text-indigo-500 border border-indigo-500 font-semibold rounded hover:bg-indigo-100" data-han="<%= @yaku_values[yaku][:han] %>" data-fu="<%= @yaku_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>

    <div class="text-2xl text-center my-4">
      <% ["混老頭", "小三元", "三槓子"].each do |yaku| %>
        <% if @yaku_values[yaku] %>
          <button class="yaku-button px-2 py-1 text-indigo-500 border border-indigo-500 font-semibold rounded hover:bg-indigo-100" data-han="<%= @yaku_values[yaku][:han] %>" data-fu="<%= @yaku_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>
  </div>
</div>

<div class="flex justify-center space-x-20">
  <div class="text-2xl text-center my-4">
    <h2 class="text-2xl text-center my-4">3翻</h2> <!-- 3翻の見出し -->

    <!-- 3翻の役 -->
    <div class="text-2xl text-center my-4">
      <% ["混一色", "純全帯幺九", "二盃口"].each do |yaku| %>
        <% if @yaku_values[yaku] %>
          <button class="yaku-button px-2 py-1 text-indigo-500 border border-indigo-500 font-semibold rounded hover:bg-indigo-100" data-han="<%= @yaku_values[yaku][:han] %>" data-fu="<%= @yaku_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>
  </div>

  <div class="text-2xl text-center my-4">
    <h2 class="text-2xl text-center my-4">6翻</h2> <!-- 6翻の見出し -->

    <!-- 6翻の役 -->
    <div class="text-2xl text-center my-4">
      <% ["清一色"].each do |yaku| %>
        <% if @yaku_values[yaku] %>
          <button class="yaku-button px-2 py-1 text-indigo-500 border border-indigo-500 font-semibold rounded hover:bg-indigo-100" data-han="<%= @yaku_values[yaku][:han] %>" data-fu="<%= @yaku_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>
  </div>

  <div class="text-2xl text-center my-4">
    <h2 class="text-2xl text-center my-4">役満</h2> <!-- 役満の見出し -->

    <!-- 6翻の役 -->
    <div class="text-2xl text-center my-4">
      <% ["役満"].each do |yaku| %>
        <% if @yaku_values[yaku] %>
          <button class="yaku-button px-2 py-1 text-indigo-500 border border-indigo-500 font-semibold rounded hover:bg-indigo-100" data-han="<%= @yaku_values[yaku][:han] %>" data-fu="<%= @yaku_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>
  </div>
</div>

<h2 class="text-center text-2xl font-bold mt-8">( )合計翻が4以下あればこれより下の項目を選択してください</h2>

<div class="flex justify-center">
  <div class="text-2xl text-center my-4">
    <h2 class="text-2xl text-center my-4">1つ目の面子</h2> <!-- 符の見出し -->

    <!-- 面子 -->
    <div class="text-2xl text-center my-4">
      <% ["順子(0)", "一九字牌のポン(4)", "一九字牌のアンコ(8)", "一九字牌のミンカン(16)", "一九字牌のアンカン(32)"].each do |yaku| %>
        <% if @fu_values[yaku] %>
          <button class="fu-button px-2 py-1 text-green-500 border border-green-500 font-semibold rounded hover:bg-green-100" data-han="<%= @fu_values[yaku][:han] %>" data-fu="<%= @fu_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>

    <div class="text-2xl text-center my-4">
      <% ["二〜八のポン(2)", "二〜八のアンコ(4)", "二〜八のミンカン(8)", "二〜八のアンカン(16)",].each do |yaku| %>
        <% if @fu_values[yaku] %>
          <button class="fu-button px-2 py-1 text-green-500 border border-green-500 font-semibold rounded hover:bg-green-100" data-han="<%= @fu_values[yaku][:han] %>" data-fu="<%= @fu_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>
  </div>
</div>

<div class="flex justify-center">
  <div class="text-2xl text-center my-4">
    <h2 class="text-2xl text-center my-4">2つ目の面子</h2> <!-- 符の見出し -->

    <!-- 面子 -->
    <div class="text-2xl text-center my-4">
      <% ["順子(0)", "一九字牌のポン(4)", "一九字牌のアンコ(8)", "一九字牌のミンカン(16)", "一九字牌のアンカン(32)"].each do |yaku| %>
        <% if @fu_values[yaku] %>
          <button class="fu-button px-2 py-1 text-green-500 border border-green-500 font-semibold rounded hover:bg-green-100" data-han="<%= @fu_values[yaku][:han] %>" data-fu="<%= @fu_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>

    <div class="text-2xl text-center my-4">
      <% ["二〜八のポン(2)", "二〜八のアンコ(4)", "二〜八のミンカン(8)", "二〜八のアンカン(16)",].each do |yaku| %>
        <% if @fu_values[yaku] %>
          <button class="fu-button px-2 py-1 text-green-500 border border-green-500 font-semibold rounded hover:bg-green-100" data-han="<%= @fu_values[yaku][:han] %>" data-fu="<%= @fu_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>
  </div>
</div>

<div class="flex justify-center">
  <div class="text-2xl text-center my-4">
    <h2 class="text-2xl text-center my-4">3つ目の面子</h2> <!-- 符の見出し -->

    <!-- 面子 -->
    <div class="text-2xl text-center my-4">
      <% ["順子(0)", "一九字牌のポン(4)", "一九字牌のアンコ(8)", "一九字牌のミンカン(16)", "一九字牌のアンカン(32)"].each do |yaku| %>
        <% if @fu_values[yaku] %>
          <button class="fu-button px-2 py-1 text-green-500 border border-green-500 font-semibold rounded hover:bg-green-100" data-han="<%= @fu_values[yaku][:han] %>" data-fu="<%= @fu_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>

    <div class="text-2xl text-center my-4">
      <% ["二〜八のポン(2)", "二〜八のアンコ(4)", "二〜八のミンカン(8)", "二〜八のアンカン(16)",].each do |yaku| %>
        <% if @fu_values[yaku] %>
          <button class="fu-button px-2 py-1 text-green-500 border border-green-500 font-semibold rounded hover:bg-green-100" data-han="<%= @fu_values[yaku][:han] %>" data-fu="<%= @fu_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>
  </div>
</div>

<div class="flex justify-center">
  <div class="text-2xl text-center my-4">
    <h2 class="text-2xl text-center my-4">4つ目の面子</h2> <!-- 符の見出し -->

    <!-- 面子 -->
    <div class="text-2xl text-center my-4">
      <% ["順子(0)", "一九字牌のポン(4)", "一九字牌のアンコ(8)", "一九字牌のミンカン(16)", "一九字牌のアンカン(32)"].each do |yaku| %>
        <% if @fu_values[yaku] %>
          <button class="fu-button px-2 py-1 text-green-500 border border-green-500 font-semibold rounded hover:bg-green-100" data-han="<%= @fu_values[yaku][:han] %>" data-fu="<%= @fu_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>

    <div class="text-2xl text-center my-4">
      <% ["二〜八のポン(2)", "二〜八のアンコ(4)", "二〜八のミンカン(8)", "二〜八のアンカン(16)",].each do |yaku| %>
        <% if @fu_values[yaku] %>
          <button class="fu-button px-2 py-1 text-green-500 border border-green-500 font-semibold rounded hover:bg-green-100" data-han="<%= @fu_values[yaku][:han] %>" data-fu="<%= @fu_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>
  </div>
</div>

<div class="flex justify-center space-x-20">
  <div class="text-2xl text-center my-4">
    <h2 class="text-2xl text-center my-4">雀頭</h2> <!-- 符の見出し -->

    <!-- 雀頭 -->
    <div class="text-2xl text-center my-4">
      <% ["一〜九 / 客風牌(0)", "自風牌 / 場風牌 / 三元牌(2)", "連風牌(4)"].each do |yaku| %>
        <% if @fu_values[yaku] %>
          <button class="fu-button px-2 py-1 text-green-500 border border-green-500 font-semibold rounded hover:bg-green-100" data-han="<%= @fu_values[yaku][:han] %>" data-fu="<%= @fu_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>
  </div>


  <div class="text-2xl text-center my-4">
    <h2 class="text-2xl text-center my-4">待ちの形</h2> <!-- 符の見出し -->

    <!-- 待ちの形 -->
    <div class="text-2xl text-center my-4">
      <% ["リャンメン / シャンポン(0)", "カンチャン / ペンチャン / タンキ / ノベタン(2)"].each do |yaku| %>
        <% if @fu_values[yaku] %>
          <button class="fu-button px-2 py-1 text-green-500 border border-green-500 font-semibold rounded hover:bg-green-100" data-han="<%= @fu_values[yaku][:han] %>" data-fu="<%= @fu_values[yaku][:fu] %>"><%= yaku %></button>
        <% end %>
      <% end %>
    </div>
  </div>
</div>

<%= render 'layouts/footer' %>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const yakuButtons = document.querySelectorAll('.yaku-button');
    const fuButtons = document.querySelectorAll('.fu-button');
    const scoreDisplay = document.getElementById('score_display');
    const roleRadios = document.querySelectorAll('input[name="role"]');
    const winTypeRadios = document.querySelectorAll('input[name="winType"]');
    const menzenRadios = document.querySelectorAll('input[name="menzen"]');
    const doraButtons = document.querySelectorAll('.dora-button');
    const resetButton = document.getElementById('reset_button');
    let basicHan = 0; // 基本の合計翻を保持する変数
    let totalHan = 0; // 最終的な合計翻を保持する変数
    let basicFu = 20; // 基本の合計符を保持する変数
    let totalFu = 0;  // 最終的な合計符を保持する変数
    let selectedYaku = []; // 選択された役を保持する配列
    let selectedFu = []; // 選択された符を保持する配列
    let currentRole = 'parent'; // 初期値は親
    let currentWinType = 'tumo'; // 初期値はツモ
    let currentMenzen = 'none'; // 初期値は鳴きなし（前）
    let totalDora = 0; // ドラ枚数を保持

    const yakuValues = <%= raw @yaku_values.to_json %>;
    const fuValues = <%= raw @fu_values.to_json %>;
    const yakuScore = <%= raw @yaku_score.to_json %>;

    // ドラ枚数計算
    function calculateDoraBonus() {
      return totalDora;
    }

    // スコア表示を更新する関数
    function updateScoreDisplay() {
      totalFu = basicFu;

      // 七対子,平和の符計算
      if (selectedYaku.includes('七対子')) {
        totalFu = 25;
      } else if (selectedYaku.includes('平和')) {
        if (currentWinType === 'tumo') {
          totalFu = 20;
        } else if (currentWinType === 'ron') {
          totalFu = 30;
        }
      } else {
        if (currentWinType === 'ron' && currentMenzen === 'none') {
          totalFu += 10; // 鳴きなしのロンは10符加算
        } else if (currentWinType === 'tumo') {
          totalFu += 2; // ツモなら符を2加算
        }
        totalFu = Math.ceil(totalFu / 10) * 10; // 10単位で切り上げ
      }

      totalHan = basicHan + calculateDoraBonus();

      const menzenBonusYaku = ['三色同順', '一気通貫', '混一色', '清一色', '混全帯幺九', '純全帯幺九'];
      menzenBonusYaku.forEach(yaku => {
        if (selectedYaku.includes(yaku) && currentMenzen === 'naki') {
          totalHan -= 1; // 鳴きありの場合、1翻減少
        }
      });

      // スコアキーを生成
      let scoreKey;
      if (totalHan >= 13) {
        scoreKey = 'han:over13,fu:any'; // 役満以上の場合
      } else if (totalHan >= 5) {
        scoreKey = `han:${totalHan},fu:any`; // 満貫以上の場合
      } else if (totalHan === 4 && totalFu >= 30) {
        scoreKey = 'han:4,fu:over30'; // 30符以上の4翻
      } else if (totalHan === 3 && totalFu >= 60) {
        scoreKey = 'han:3,fu:over60'; // 60符以上の3翻
      } else {
        scoreKey = `han:${totalHan},fu:${totalFu}`; // 通常の翻と符の組み合わせ
      }

      // スコアを取得
      let totalScore = 'N/A';
      if (yakuScore[scoreKey] && yakuScore[scoreKey][currentRole]) {
        totalScore = yakuScore[scoreKey][currentRole][currentWinType] || 'N/A';
      }

      scoreDisplay.textContent = `合計点数: ${totalScore}(＋本場点), 合計翻: ${totalHan}, 合計符: ${totalFu},  ドラ枚数: ${totalDora}, 選択された役: ${selectedYaku.join(', ')}, 選択された符: ${selectedFu.join(', ')}`;
    }

    // 親と子の切り替え
    roleRadios.forEach(radio => {
      radio.addEventListener('change', function() {
        currentRole = this.value;
        updateScoreDisplay();
      });
    });

    // ツモとロンの切り替え
    winTypeRadios.forEach(radio => {
      radio.addEventListener('change', function() {
        currentWinType = this.value;
        updateScoreDisplay();
      });
    });

    // 鳴きなし（面前）と鳴きありの切り替え
    menzenRadios.forEach(radio => {
      radio.addEventListener('change', function() {
        currentMenzen = this.value;
        updateScoreDisplay();
      });
    });

    // ドラ枚数ボタンのクリック
    doraButtons.forEach(button => {
      button.addEventListener('click', function() {
        const selectedButton = document.querySelector('.dora-button.selected');

        if (this.classList.contains('selected')) {
          // 既に選択されているボタンがクリックされた場合
          totalDora = 0; // 選択解除時にリセット
          this.classList.remove('selected');
          this.classList.remove('bg-red-500', 'text-white', 'bg-opacity-80');
          this.classList.add('text-red-500', 'border-red-500');
          this.dataset.isSelected = 'false';
        } else {
          // 他のボタンが選択されている場合、そのボタンをリセット
          if (selectedButton) {
            selectedButton.classList.remove('selected');
            selectedButton.classList.remove('bg-red-500', 'text-white', 'bg-opacity-80');
            selectedButton.classList.add('text-red-500', 'border-red-500');
            selectedButton.dataset.isSelected = 'false';
          }

           // 新しく選択されたボタンの処理
          totalDora = parseInt(this.dataset.dora);
          this.classList.add('selected');
          this.classList.add('bg-red-500', 'text-white', 'bg-opacity-80');
          this.classList.remove('text-red-500', 'border-red-500');
          this.dataset.isSelected = 'true';
        }

        updateScoreDisplay();
      });
    });

    // 役ボタンのクリック
    yakuButtons.forEach(button => {
      button.dataset.isSelected = 'false';

      button.addEventListener('click', function() {
        const yakuName = this.textContent;

        if (this.dataset.isSelected === 'true') {
          basicHan -= yakuValues[yakuName].han;
          basicFu -= yakuValues[yakuName].fu;
          selectedYaku = selectedYaku.filter(yaku => yaku !== yakuName);
          this.classList.remove('selected');
          this.classList.remove('bg-indigo-500', 'text-white', 'bg-opacity-80');
          this.classList.add('text-indigo-500');
          this.dataset.isSelected = 'false';
        } else {
          basicHan += yakuValues[yakuName].han;
          basicFu += yakuValues[yakuName].fu;
          selectedYaku.push(yakuName);
          this.classList.add('selected');
          this.classList.add('bg-indigo-500', 'text-white', 'bg-opacity-80');
          this.classList.remove('text-indigo-500');
          this.dataset.isSelected = 'true';
        }

        updateScoreDisplay();
      });
    });

    // 符ボタンのクリック
    fuButtons.forEach(button => {
      button.dataset.isSelected = 'false';

      button.addEventListener('click', function() {
        const fuName = this.textContent;

        if (this.dataset.isSelected === 'true') {
          basicFu -= fuValues[fuName].fu;
          selectedFu = selectedFu.filter(fu => fu !== fuName);
          this.classList.remove('selected');
          this.classList.remove('bg-green-500', 'text-white', 'bg-opacity-80');
          this.classList.add('text-green-500');
          this.dataset.isSelected = 'false';
        } else {
          basicFu += fuValues[fuName].fu;
          selectedFu.push(fuName);
          this.classList.add('selected');
          this.classList.add('bg-green-500', 'text-white', 'bg-opacity-80');
          this.classList.remove('text-green-500');
          this.dataset.isSelected = 'true';
        }

        updateScoreDisplay();
      });
    });

    function resetAll() {
      // 基本の変数のリセット
      basicHan = 0;
      totalHan = 0;
      basicFu = 20;
      totalFu = 0;
      totalDora = 0;
      selectedYaku = [];
      selectedFu = [];
      currentRole = 'parent';
      currentWinType = 'tumo';
      currentMenzen = 'none';

      // 役ボタンの選択状態をリセット
      document.querySelectorAll('.yaku-button').forEach(button => {
        button.classList.remove('selected');
        button.classList.remove('bg-indigo-500', 'text-white');
        button.classList.add('text-indigo-500');
        button.dataset.isSelected = 'false';
      });

      //  符ボタンの選択状態をリセット
      document.querySelectorAll('.fu-button').forEach(button => {
        button.classList.remove('selected');
        button.classList.remove('bg-green-500', 'text-white');
        button.classList.add('text-green-500');
        button.dataset.isSelected = 'false';
      });

      // ドラボタンのリセット
      doraButtons.forEach(button => {
        button.classList.remove('selected');
        button.classList.remove('bg-red-500', 'text-white');
        button.classList.add('text-red-500', 'border-red-500');
        button.dataset.isSelected = 'false';
      });

       // ラジオボタンのリセット
      roleRadios.forEach(radio => {
        radio.checked = radio.value === 'parent';
      });

      winTypeRadios.forEach(radio => {
        radio.checked = radio.value === 'tumo';
      });

      menzenRadios.forEach(radio => {
        radio.checked = radio.value === 'none';
      });

      updateScoreDisplay();
    }

    if (resetButton) {
      resetButton.addEventListener('click', resetAll);
    }
  });
</script>
</div>
</div>